gapDifference %>% summarize(maximum = max(gapDif))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = lifeExp - unlist(gap07[as.numeric(country), 2]))  %>% select(country, gapDif)
gapDifference %>% filter(value == max(value))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = lifeExp - unlist(gap07[as.numeric(country), 2]))  %>% select(country, gapDif)
gapDifference %>% filter(gapDif == max(gapDif))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = unlist(gap07[as.numeric(country), 2]) - lifeExp)  %>% select(country, gapDif)
gapDifference %>% filter(gapDif == max(gapDif))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = unlist(gap07[as.numeric(country), 2]) - lifeExp)  %>% select(country, continent, gapDif)
gapDifference %>% group_by(continent) %>% filter(gapDif == max(gapDif))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gap %>% filter(year == 1997) %>% filter(country = "Rwanda")
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gap %>% filter(year == 1997) %>% filter(country == "Rwanda")
gap07 %>% filter(country == "Rwanda")
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = unlist(gap07[as.numeric(country), 2]) - lifeExp)  %>% select(country, continent, gapDif)
gapDifference %>% group_by(continent) %>% filter(gapDif == max(gapDif))
gap07 = gap %>% filter(year == 2007) %>% select(country, lifeExp)
gapDifference = gap %>% filter(year == 1997) %>% mutate(gapDif = unlist(gap07[as.numeric(country), 2]) - lifeExp)  %>% select(country, continent, gapDif)
gapDifference %>% group_by(continent) %>% filter(gapDif == max(gapDif))
SA = c("Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Ecuador", "Paraguay", "Peru", "Uruguay", "Venezuela")
gap = gapminder %>% mutate(continent = factor(if_else(country %in% SA, "South America", as.character(continent))))
gap = gap %>% mutate(continent = factor(if_else(continent == "Americas", "North America", as.character(continent))))
gap
library(tidyverse)
library(plotly)
library(lubridate)
url <- "https://raw.githubusercontent.com/fivethirtyeight/data/master/births/US_births_2000-2014_SSA.csv"
births <- read_csv(url)
births = births %>% mutate(date = make_date(year, month, date_of_month))
convertMonth = function(closure) {
closure = str_replace_all(closure, "Month\\s10", "Oct")
closure = str_replace_all(closure, "Month\\s11", "Nov")
closure = str_replace_all(closure, "Month\\s12", "Dec")
closure = str_replace_all(closure, "Month\\s1", "Jan")
closure = str_replace_all(closure, "Month\\s2", "Feb")
closure = str_replace_all(closure, "Month\\s3", "Mar")
closure = str_replace_all(closure, "Month\\s4", "Apr")
closure = str_replace_all(closure, "Month\\s5", "May")
closure = str_replace_all(closure, "Month\\s6", "June")
closure = str_replace_all(closure, "Month\\s7", "July")
closure = str_replace_all(closure, "Month\\s8", "Aug")
closure = str_replace_all(closure, "Month\\s9", "Sep")
return(closure)
}
test = function(closure) {
toReturn = ""
for(thing in closure) {
if(toReturn == ""){
toReturn = thing
}
else if(thing != toReturn) {
return("")
}
}
return(toReturn)
}
births = births %>% mutate(period = floor((month-1)/3) + 1, sep = "")
births = births %>% mutate(week_of_month = paste("Month", month, "Week", floor((date_of_month-1)/7 + 1)))
births = births %>% mutate(month_name = paste("Month", month))
toPlot = bind_rows(
births %>%
group_by(week_of_month) %>%
summarize(b = sum(births), month = test(month_name)) %>%
select(children = week_of_month, parents = month, births = b),
births %>%
group_by(month_name) %>%
summarize(b = sum(births), period = mean(period)) %>%
transmute(children = month_name, parents = paste("Q", period, sep = ""), births = b),
births %>%
group_by(period) %>%
summarize(b = sum(births)) %>%
transmute(children = paste("Q", period, sep = ""), parents = " ", births = b),
births %>%
summarize(births = sum(births)) %>%
transmute(children = " ", parents = "", births = births))
toPlot %>%
plot_ly(
ids = ~children,
labels = ~convertMonth(children),
parents = ~parents,
values = ~births,
type = "sunburst",
branchvalues = "total")
births = births %>% group_by(year)
r1 = births %>%
group_by(year, week_of_month) %>%
summarize(b = sum(births), month = test(month_name)) %>%
select(children = week_of_month, parents = month, births = b, year = year)
r2 = births %>%
group_by(year, month_name) %>%
summarize(b = sum(births), period = mean(period)) %>%
transmute(children = month_name, parents = paste("Q", period, sep = ""), births = b)
r3 = births %>%
group_by(year, period) %>%
summarize(b = sum(births)) %>%
transmute(children = paste("Q", period, sep = ""), parents = " ", births = b)
r4 = births %>%
group_by(year) %>%
summarize(births = sum(births)) %>%
transmute(children = " ", parents = "", births = births, year = year)
toPlot = bind_rows(r1, r2, r3, r4)
toPlot$id = paste(toPlot$year,toPlot$children)
toPlot = toPlot %>% mutate(parents = if_else(parents == "", "", paste(year, parents)))
toPlot %>%
plot_ly(
ids = ~id,
labels = ~children,
parents = ~parents,
values = ~births,
type = "sunburst",
frame = ~year,
branchvalues = "total")
View(toPlot)
births = births %>% group_by(year)
r1 = births %>%
group_by(year, week_of_month) %>%
summarize(b = sum(births), month = test(month_name)) %>%
select(children = week_of_month, parents = month, births = b, year = year)
r2 = births %>%
group_by(year, month_name) %>%
summarize(b = sum(births), period = mean(period)) %>%
transmute(children = month_name, parents = paste("Q", period, sep = ""), births = b)
r3 = births %>%
group_by(year, period) %>%
summarize(b = sum(births)) %>%
transmute(children = paste("Q", period, sep = ""), parents = " ", births = b)
r4 = births %>%
group_by(year) %>%
summarize(births = sum(births)) %>%
transmute(children = " ", parents = "", births = births, year = year)
toPlot = bind_rows(r1, r2, r3, r4)
toPlot$id = paste(toPlot$year,toPlot$children)
toPlot = toPlot %>% mutate(parents = if_else(parents == "", "", paste(year, parents)))
toPlot %>%
plot_ly(
ids = ~id,
labels = ~convertMonth(children),
parents = ~parents,
values = ~births,
type = "sunburst",
frame = ~year,
branchvalues = "total")
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
View(births)
births %>% mutate(day_of_year = make_date(month, date_of_month)) %>% plot_ly(x = ~day_of_year, y = ~sum) %>% add_paths()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
births %>% mutate(day_of_year = make_date(month, date_of_month)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
b = births %>% mutate(day_of_year = make_date(month, date_of_month)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths()
b
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
View(b)
b = births %>% mutate(day_of_year = make_date(month, date_of_month))
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
View(b)
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month))
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month))
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths(color = year)
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month))
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths(color = ~year)
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month)) %>% filter(year = 2000)
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month)) %>% filter(year == 2000)
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_paths()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month)) %>% filter(year == 2000)
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines()
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
b = births %>% mutate(day_of_year = make_date(2000, month, date_of_month))
b %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
births %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
births %>% ungroup() %>% mutate(day_of_year = make_date(month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
p = births %>% group_by(year) %>% summarize(sum = sum(births)) %>% plot_ly(x = ~year, y = ~sum)
p %>% add_paths()
births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date("", month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(year, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(year = ordered(year)) %>% plot_ly(x = ~month, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~month, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xlabel = "Day of the Year", y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, x_label = "Day of the Year", y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xlab = "Day of the Year", y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year)
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = "Day of Year", yaxis = "Births")
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list("Day of Year"), yaxis = list("Births"))
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
births %>% ungroup() %>% mutate(day_of_year = paste(month, date_of_month, sep = "-"), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
births %>% ungroup() %>% mutate(day_of_year = paste(month, date_of_month, sep = "-")) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
births %>% ungroup() %>% mutate(day_of_year = paste(month, date_of_month, sep = "-"), year = ordered(year)) %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = paste(month, date_of_month, sep = "-"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
View(b)
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = toString(format(date, format="%m-%d")), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%m"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(date, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = format(make_date(2000, month, day), format="%m-%d"), year = ordered(year))
b = births %>% ungroup() %>% mutate(day_of_year = format(make_date("2000", month, day), format="%m-%d"), year = ordered(year))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date)) %>% mutate(day_of_year = format(day_of_year, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month)) %>% mutate(day_of_year = format(day_of_year, format="%m-%d"), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(2000, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(type = "date", tickformat = "%m", title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(type = "date", tickformat = "%M", title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(type = "date", tickformat = "%m", title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(type = "date", tickformat = "%B", title = "Day of Year"), yaxis = list(title = "Births"))
b = births %>% ungroup() %>% mutate(day_of_year = make_date(0, month, date_of_month), year = ordered(year))
b %>% plot_ly(x = ~day_of_year, xaxis = "Day of the Year", y = ~births) %>% add_lines(color = ~year) %>% layout(xaxis = list(type = "date", tickformat = "%B %d", title = "Day of Year"), yaxis = list(title = "Births"))
"https://ucdavis.campuslabs.com/engage/organization/regents-scholars-society"
doc = htmlParse(url)
links <- xpathSApply(doc, "//a/@href")
free(doc)
matched <- str_match_all(html, "<a href=\"(.*?)\"")
url <- "https://ucdavis.campuslabs.com/engage/organization/regents-scholars-society"
html <- paste(readLines(url), collapse="\n")
library(stringr)
matched <- str_match_all(html, "<a href=\"(.*?)\"")
matched
html
matched <- str_match_all(html, "href=\"mailto:\\W*.edu\">")
matched <- str_match_all(html, "href=\"mailto:\\W*.edu\">")
matched <- str_match_all(html, "href=\"mailto:\\w*.edu\">")
matched <- str_match_all(html, "href")
matched <- str_match_all(html, "mailto")
matched <- str_match_all(html, "mailto")
library(DBI)
chinook <- dbConnect(RPostgres::Postgres(),
dbname = "chinook",
user = "psqluser", password = "secret", host = "alan.ucdavis.edu"
)
chinook %>% tbl("Album") %>% filter(AlbumId == 31) %>% select(Title)
library(tidyverse)
library(lubridate)
chinook %>% tbl("Album") %>% filter(AlbumId == 31) %>% select(Title)
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4560L)
rd$open(silent = TRUE)
rd$navigate("https://www.reddit.com/")
page = "Swimming"
url = paste("https://www.reddit.com/r/", page, sep = "")
rd$navigate(url)
n <- 30
for (i in 1:n) {
rd$executeScript("window.scrollTo(0,document.body.scrollHeight)")
Sys.sleep(1)
}
html = rd$getPageSource() %>%
str_flatten() %>%
read_html()
all = html %>% html_nodes("div.Post")
titles = c()
upvotes = c()
content = c()
pic = c()
for(node in all) {
t = node %>%
html_nodes("h3._eYtD2XCVieq6emjKBH3m") %>%
html_text()
u = node %>%
html_nodes("div._1rZYMD_4xY3gRcSS3p8ODO") %>%
html_text()
c = node %>%
html_nodes("div.STit0dLageRsa2yR4te_b")
contentTexts = c %>% html_nodes("p") %>% html_text()
contentPic = c %>% html_nodes("img") %>% html_text()
if(u[1] != '•') {
upvotes = append(upvotes, u[1])
pic = append(pic, length(contentPic) > 0)
if(length(contentTexts) == 0) {
contentTexts = "No Text"
}
cT = ""
for(cont in contentTexts) {
cT = paste(cT, cont, sep = " ")
}
content = append(content, cT)
titles = append(titles, t[1])
}
}
table = data.frame(Title = titles, Upvotes = upvotes, Content = content, Pics = pic)
table
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
library(rvest)
library(RSelenium)
library(wdman)
library(tidyverse)
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
rm(list = ls())
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4560L)
rd$open(silent = TRUE)
rd$navigate("https://www.reddit.com/")
page = "Swimming"
url = paste("https://www.reddit.com/r/", page, sep = "")
rd$navigate(url)
n <- 30
for (i in 1:n) {
rd$executeScript("window.scrollTo(0,document.body.scrollHeight)")
Sys.sleep(1)
}
html = rd$getPageSource() %>%
str_flatten() %>%
read_html()
all = html %>% html_nodes("div.Post")
titles = c()
upvotes = c()
content = c()
pic = c()
for(node in all) {
t = node %>%
html_nodes("h3._eYtD2XCVieq6emjKBH3m") %>%
html_text()
u = node %>%
html_nodes("div._1rZYMD_4xY3gRcSS3p8ODO") %>%
html_text()
c = node %>%
html_nodes("div.STit0dLageRsa2yR4te_b")
contentTexts = c %>% html_nodes("p") %>% html_text()
contentPic = c %>% html_nodes("img") %>% html_text()
if(u[1] != '•') {
upvotes = append(upvotes, u[1])
pic = append(pic, length(contentPic) > 0)
if(length(contentTexts) == 0) {
contentTexts = "No Text"
}
cT = ""
for(cont in contentTexts) {
cT = paste(cT, cont, sep = " ")
}
content = append(content, cT)
titles = append(titles, t[1])
}
}
table = data.frame(Title = titles, Upvotes = upvotes, Content = content, Pics = pic)
table
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4560L)
rd$open(silent = TRUE)
rd$navigate("https://www.reddit.com/")
page = "Swimming"
url = paste("https://www.reddit.com/r/", page, sep = "")
rd$navigate(url)
n <- 30
for (i in 1:n) {
rd$executeScript("window.scrollTo(0,document.body.scrollHeight)")
Sys.sleep(1)
}
html = rd$getPageSource() %>%
str_flatten() %>%
read_html()
all = html %>% html_nodes("div.Post")
titles = c()
upvotes = c()
content = c()
pic = c()
for(node in all) {
t = node %>%
html_nodes("h3._eYtD2XCVieq6emjKBH3m") %>%
html_text()
u = node %>%
html_nodes("div._1rZYMD_4xY3gRcSS3p8ODO") %>%
html_text()
c = node %>%
html_nodes("div.STit0dLageRsa2yR4te_b")
contentTexts = c %>% html_nodes("p") %>% html_text()
contentPic = c %>% html_nodes("img") %>% html_text()
if(u[1] != '•') {
upvotes = append(upvotes, u[1])
pic = append(pic, length(contentPic) > 0)
if(length(contentTexts) == 0) {
contentTexts = "No Text"
}
cT = ""
for(cont in contentTexts) {
cT = paste(cT, cont, sep = " ")
}
content = append(content, cT)
titles = append(titles, t[1])
}
}
table = data.frame(Title = titles, Upvotes = upvotes, Content = content, Pics = pic)
table
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
write.csv(table, "~/Downloads/projectcsv.csv")
library(rvest)
library(RSelenium)
library(wdman)
library(tidyverse)
server <- chrome(port = 4560L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4560L)
rd$open(silent = TRUE)
rd$navigate("https://www.reddit.com/")
page = "Swimming"
url = paste("https://www.reddit.com/r/", page, sep = "")
rd$navigate(url)
n <- 30
for (i in 1:n) {
rd$executeScript("window.scrollTo(0,document.body.scrollHeight)")
Sys.sleep(1)
}
html = rd$getPageSource() %>%
str_flatten() %>%
read_html()
all = html %>% html_nodes("div.Post")
titles = c()
upvotes = c()
content = c()
pic = c()
for(node in all) {
t = node %>%
html_nodes("h3._eYtD2XCVieq6emjKBH3m") %>%
html_text()
u = node %>%
html_nodes("div._1rZYMD_4xY3gRcSS3p8ODO") %>%
html_text()
c = node %>%
html_nodes("div.STit0dLageRsa2yR4te_b")
contentTexts = c %>% html_nodes("p") %>% html_text()
contentPic = c %>% html_nodes("img") %>% html_text()
if(u[1] != '•') {
upvotes = append(upvotes, u[1])
pic = append(pic, length(contentPic) > 0)
if(length(contentTexts) == 0) {
contentTexts = "No Text"
}
cT = ""
for(cont in contentTexts) {
cT = paste(cT, cont, sep = " ")
}
content = append(content, cT)
titles = append(titles, t[1])
}
}
table = data.frame(Title = titles, Upvotes = upvotes, Content = content, Pics = pic)
table
#content: div STit0dLageRsa2yR4te_b -> all p, might have an img
# h3 <- title
# div class _1rZYMD_4xY3gRcSS3p8ODO <- rating
file = read.csv("~/git/STA\ 141B/STA141BProject/projectcsv.csv")
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
rt = 4565L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4565L)
rd$open(silent = TRUE)
rt = 4560L, verbose = FALSE, version = "80.0.3987.106")
rd <- remoteDriver(browser = "chrome", port = 4560L)
rd$open(silent = TRUE)
rd$naviage("https://www.reddit.com/r/Swimming")
rd$navigate("https://www.reddit.com/r/Swimming")
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
library(shiny); runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
runApp('git/STA 141B/STA141BProject/project.r')
